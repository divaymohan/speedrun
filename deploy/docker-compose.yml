version: '3.9'

services:
  api:
    build:
      context: ..
      dockerfile: ./Dockerfile
      target: prod
    image: speedrun:${SPEEDRUN_VERSION:-latest}
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPEEDRUN_HOST: 0.0.0.0
      SPEEDRUN_DB_HOST: speedrun-db
      SPEEDRUN_DB_PORT: 5432
      SPEEDRUN_DB_USER: speedrun
      SPEEDRUN_DB_PASS: speedrun
      SPEEDRUN_DB_BASE: speedrun
    ports:
    - "8000:8000"

  db:
    image: postgres:13.8-bullseye
    hostname: speedrun-db
    environment:
      POSTGRES_PASSWORD: "speedrun"
      POSTGRES_USER: "speedrun"
      POSTGRES_DB: "speedrun"
    volumes:
    - speedrun-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U speedrun
      interval: 2s
      timeout: 3s
      retries: 40

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@speedrun.com"
      PGADMIN_DEFAULT_PASSWORD: "speedrun"
    ports:
    - "5050:80"
    depends_on:
      db:
        condition: service_healthy

  redis:
    container_name: redis
    image: redis:6.2-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 3s
      retries: 40

  worker:
    build:
      context: ..
      dockerfile: ./Dockerfile
      target: prod
    container_name: worker
    volumes:
    - speedrun-worker-data:/var/lib/worker/data
    command: ["celery", "-A", "speedrun.tasks", "worker", "-B", "--loglevel=info"]
    depends_on:
    - redis
    - api

  flower:
    container_name: flower
    build:
      context: ..
      dockerfile: ./Dockerfile
      target: prod
    command: celery -A speedrun.tasks flower --port=5555
    ports:
    - "5556:5555"
    depends_on:
    - api
    - redis
    - worker

  celerybeat:
    container_name: celerybeat
    build:
      context: ..
      dockerfile: ./Dockerfile
      target: prod
    environment:
      REDBEAT_REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    command: ["celery", "-A", "speedrun.tasks", "beat", "--scheduler", "redbeat.RedBeatScheduler", "--loglevel=info"]
    depends_on:
    - redis
    - worker
    restart: always

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8081:8081"
    depends_on:
    - redis

volumes:
  speedrun-db-data:
    name: speedrun-db-data
  speedrun-worker-data:
    name: speedrun-worker-data
