version: '3.9'

services:
  api:
    build:
      context: ..
      dockerfile: ./Dockerfile
      target: prod
    image: speedrun:${SPEEDRUN_VERSION:-latest}
    restart: always
#    env_file:
#    - .env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPEEDRUN_HOST: 0.0.0.0
      SPEEDRUN_DB_HOST: speedrun-db
      SPEEDRUN_DB_PORT: 5432
      SPEEDRUN_DB_USER: speedrun
      SPEEDRUN_DB_PASS: speedrun
      SPEEDRUN_DB_BASE: speedrun
      SPEEDRUN_RABBITMQ_HOST: speedrun-rabbitmq
    ports:
    - "8000:8000"


  db:
    image: postgres:13.8-bullseye
    hostname: speedrun-db
    environment:
      POSTGRES_PASSWORD: "speedrun"
      POSTGRES_USER: "speedrun"
      POSTGRES_DB: "speedrun"
    volumes:
    - speedrun-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U speedrun
      interval: 2s
      timeout: 3s
      retries: 40

  rabbitmq:
    image: rabbitmq:3.9-management
    hostname: "speedrun-rabbitmq"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "speedrun"
      RABBITMQ_DEFAULT_PASS: "speedrun"
    healthcheck:
      test: rabbitmq-diagnostics check_running
      interval: 2s
      timeout: 3s
      retries: 40
    ports:
    - "5672:5672"    # AMQP
    - "15672:15672"    # Management UI

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@speedrun.com"
      PGADMIN_DEFAULT_PASSWORD: "speedrun"
    ports:
    - "5050:80"
    depends_on:
      db:
        condition: service_healthy

  worker:
    build:
      context: ..
      dockerfile: ./Dockerfile
      target: prod
    container_name: worker
    command: ["celery", "-A", "speedrun.tasks", "worker", "--loglevel=info"]
    depends_on:
    - rabbitmq
    - api

volumes:
  speedrun-db-data:
    name: speedrun-db-data
